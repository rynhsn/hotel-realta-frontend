@page "/booking/{Id:int}"
@using Realta.Contract.Models
@using Realta.Frontend.HttpRepository.Booking

<link rel="stylesheet" href="HotelFacilitites.razor.css"/>
<PageTitle>Booking Room Detail</PageTitle>
<section class="card-components">
<div class="container-fluid">
    <div class="title-wrapper pt-30">
    <div class="row align-items-center">
        <div class="col-md-6">
            <div class="title mb-30">
                <h2>Room Detail</h2>
            </div>
        </div>
        <!-- end col -->
                <div class="col-md-6">
                  <div class="breadcrumb-wrapper mb-30">
                    <nav aria-label="breadcrumb">
                      <ol class="breadcrumb">
                        <li class="breadcrumb-item">
                          <a href="/">Home</a>
                        </li>
                        <li class="breadcrumb-item">
                          <a href="/hotelList">Hotel List</a>
                        </li>
                        <li class="breadcrumb-item active" aria-current="page">
                          Booking Room Detail
                        </li>
                      </ol>
                    </nav>
                  </div>
                </div>
        <!-- end col -->
    </div>
    <!-- end row -->
    <!-- ========== cards-styles end ========== -->
</div>
<div class="row mt-3">
<div class="col">
<div class="card-style mb-30">
    <form class="">
        <div class="row mb-0">
            <div class="col-lg-3 col-xl-3">
                <div class="input-style-1">
                    <p class="ml-5">Hotel Name :</p>
                    <input type="text" id="inputName" placeholder="Enter hotel name">
                </div>
            </div>
            <div class="col-lg-2 col-xl-2">
                <div class="input-style-1">
                    <p class="ml-5">Start Date :</p>
                    <input type="date" id="inputStartDate" placeholder="Start Date">
                </div>
            </div>
            <div class="col-lg-2 col-xl-2">
                <div class="input-style-1">
                    <p class="ml-5">End Date :</p>
                    <input type="date" id="inputEndDate" placeholder="End Date ">
                </div>
            </div>
            <div class="col-lg-3 col-xl-3">
                <div class="input-style-1">
                    <p class="ml-5">Total Guest :</p>
                    <input type="text" id="inputRoom" placeholder="Room and Guest">
                </div>
            </div>
            <div class="col-lg-1 col-xl-1 mt-30 ml-40 ">
                <a href="#0" class="main-btn success-btn btn-sm"> Search </a>
            </div>
        </div>
    </form>
</div>
<div class="card-style mb-30">
<div class="row">
    <div id="carouselExampleControls" class="carousel slide" data-bs-ride="carousel">
        <div class="carousel-inner">
            <div class="carousel-item active">
                <img src="https://via.placeholder.com/800x400?text=Gambar+1" class="d-block w-100" alt="Gambar 1">
            </div>
            <div class="carousel-item">
                <img src="https://via.placeholder.com/800x400?text=Gambar+2" class="d-block w-100" alt="Gambar 2">
            </div>
            <div class="carousel-item">
                <img src="https://via.placeholder.com/800x400?text=Gambar+3" class="d-block w-100" alt="Gambar 3">
            </div>
            <div class="carousel-item">
                <img src="https://via.placeholder.com/800x400?text=Gambar+4" class="d-block w-100" alt="Gambar 4">
            </div>
            <div class="carousel-item">
                <img src="https://via.placeholder.com/800x400?text=Gambar+5" class="d-block w-100" alt="Gambar 5">
            </div>
            <div class="carousel-item">
                <img src="https://via.placeholder.com/800x400?text=Gambar+6" class="d-block w-100" alt="Gambar 6">
            </div>
        </div>
        <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Previous</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Next</span>
        </button>
    </div>
</div>
<div class="row">
    <div class="col-xl-7 col-lg-7">
        <div class="card-style-3 mb-30 mt-30">
            <div class="card-content mt-10">
                
                    <div class="row">
                        <div class="col-xl-6 col-lg-6">
                            <h2 class="mb-0 mr-20">
                                <a href="#0"> @Hotels.HotelName </a>
                            </h2>
                            <h5 class="text-sm text-regular mt-0 mr-20"> @Hotels.HotelAddress , @Hotels.HotelCity </h5>
                            <p class="mt-15">
                                <span class="badge danger-btn">VIP</span>
                            </p>
                            <h5 class="text-medium mt-20 mb-10">Description</h5>
                            <p class="mt-0">
                                @Hotels.HotelDescription
                            </p>
                        </div>
                        <div class="col-xl-6 col-lg-6">
                            <li class="badge success-btn">
                                <span class="mdi mdi-star-box">@Hotels.HotelRatingStar</span>
                            </li>
                        </div>
                    </div>
                
            </div>
            <div class="card-style-3 mb-30 mt-20" style="max-width: 750px; height: 70px">
                <div class="card-content mb-10" style="text-align: center;">
                    <h4 class="mb-40 " style="justify-content: center; align-items: center; font-weight: bold;">ANOTHER ROOM</h4>
                </div>
            </div>
            <!-- Perulangan Hotel Lain -->
            @foreach (var room in HotelsListById)
            {
                <div class="row mt-30 mb-30">
                    <div class="card-body col-xl-5 col-lg-5">
                        <h4 class="mt-10 ml-10">@room.FaciName</h4>
                        <p class="mt-0 ml-10" style="font-size: 12px;">Kamar untuk @room.FaciMaxNumber orang</p>
                        <p class="mt-30 ml-10 mr-3 fw-bold" style="font-size: 12px">
                            @string.Format("IDR {0:N0}", @room.FaciPrice)<s class="ml-10 text-danger"> @(string.Format("IDR {0:N0}", (room.FaciPrice ?? 0m) * 1.2m))</s>
                        </p>
                    </div>
                    <div class="card-body col-xl-7 col-lg-7">
                        <a href="@room.FaciPhotoUrl" target="_blank">
                            <img class="card-img-top" src="@room.FaciPhotoUrl" alt="Room Picture">
                        </a>
                        <div class="d-flex justify-content-end">
                            <button class="main-btn primary-btn btn-hover mt-10 mr-60" @onclick="() => AddtoCart(room)" disabled="@(!CanAddToCart(room))" data-bs-toggle="collapse" aria-expanded="false" aria-controls="cart"> Add Room</button>
                            </div>
                    </div>
                </div>
                <hr/>
            }
                <!-- End Perulangan Hotel Lain -->
            
            <div class="row mt-30 mb-30" style="position: center">
                
                
                    <div class="card-body col-xl-6 col-lg-6">
                    <h4 class="mt-20 ml-30">Rating And Review</h4>
                    <p class="mt-10 ml-100 " style="font-size: 16px;">
                        <span class="mdi mdi-star-box">@Hotels.HotelRatingStar</span>
                    </p>
                    @{
                        string indexRating;
                        if (Hotels.HotelRatingStar <= 1)
                        {
                            indexRating = "Very Bad";
                        }
                        else if (Hotels.HotelRatingStar <= 2)
                        {
                            indexRating = "Bad";
                        }
                        else if (Hotels.HotelRatingStar <= 3)
                        {
                            indexRating = "Normal";
                        }
                        else if (Hotels.HotelRatingStar <= 4)
                        {
                            indexRating = "Good";
                        }
                        else
                        {
                            indexRating = "Very Good";
                        }
                    }
                    <h6 class="mt-50 ml-50"> (@Hotels.HotelRatingStar ratings) @indexRating </h6>


                </div>
                
                @* <div class="card-body col-xl-6 col-lg-6"> *@
                @*     <div class="card-style mb-30"> *@
                @*         <div class="file-list"> *@
                @*             <div class="file-item"> *@
                @*                 <div class="file-item-data w-100"> *@
                @*                     <div class="d-flex justify-content-between"> *@
                @*                         <h6 class="text-sm text-medium"> *@
                @*                             <span class="mdi mdi-star-box">5</span> *@
                @*                         </h6> *@
                @*                         <h6 class="text-xs text-medium">60%</h6> *@
                @*                     </div> *@
                @*                     <div class="file-size-wrapper"> *@
                @*                         <div class="file-size bg-warning" style="width: 60%"></div> *@
                @*                     </div> *@
                @*                 </div> *@
                @*             </div> *@
                @*             <div class="file-item"> *@
                @*                 <div class="file-item-data w-100"> *@
                @*                     <div class="d-flex justify-content-between"> *@
                @*                         <h6 class="text-sm text-medium"> *@
                @*                             <span class="mdi mdi-star-box">4</span> *@
                @*                         </h6> *@
                @*                         <h6 class="text-xs text-medium">20%</h6> *@
                @*                     </div> *@
                @*                     <div class="file-size-wrapper"> *@
                @*                         <div class="file-size bg-warning" style="width: 20%"></div> *@
                @*                     </div> *@
                @*                 </div> *@
                @*             </div> *@
                @*             <div class="file-item"> *@
                @*                 <div class="file-item-data w-100"> *@
                @*                     <div class="d-flex justify-content-between"> *@
                @*                         <h6 class="text-sm text-medium"> *@
                @*                             <span class="mdi mdi-star-box">3</span> *@
                @*                         </h6> *@
                @*                         <h6 class="text-xs text-medium">10%</h6> *@
                @*                     </div> *@
                @*                     <div class="file-size-wrapper"> *@
                @*                         <div class="file-size bg-warning" style="width: 10%"></div> *@
                @*                     </div> *@
                @*                 </div> *@
                @*             </div> *@
                @*             <div class="file-item"> *@
                @*                 <div class="file-item-data w-100"> *@
                @*                     <div class="d-flex justify-content-between"> *@
                @*                         <h6 class="text-sm text-medium"> *@
                @*                             <span class="mdi mdi-star-box">2</span> *@
                @*                         </h6> *@
                @*                         <h6 class="text-xs text-medium">7%</h6> *@
                @*                     </div> *@
                @*                     <div class="file-size-wrapper"> *@
                @*                         <div class="file-size bg-warning" style="width: 7%"></div> *@
                @*                     </div> *@
                @*                 </div> *@
                @*             </div> *@
                @*             <div class="file-item"> *@
                @*                 <div class="file-item-data w-100"> *@
                @*                     <div class="d-flex justify-content-between"> *@
                @*                         <h6 class="text-sm text-medium"> *@
                @*                             <span class="mdi mdi-star-box">1</span> *@
                @*                         </h6> *@
                @*                         <h6 class="text-xs text-medium">3%</h6> *@
                @*                     </div> *@
                @*                     <div class="file-size-wrapper"> *@
                @*                         <div class="file-size bg-warning" style="width: 3%"></div> *@
                @*                     </div> *@
                @*                 </div> *@
                @*             </div> *@
                @*         </div> *@
                @*     </div> *@
                @* </div> *@
            </div>
        </div>
    </div>
    <div class="col-xl-5 col-lg-5">
        <div class="card-style-3 mb-30 mt-30">
            <div class="card-content mt-10 mb-0 ml-0">
                <div class="alert-box primary-alert">
                    <div class="alert">
                        <p style="font-size: 13px"; class="fw-bold">
                            Login to see lower price
                            <a href="#0" class="main-btn primary-btn btn-hover btn-sm mt-1 ml-10"> Login </a>
                        </p>
                    </div>
                </div>
                <!-- yang akan di hidden -->
                @if (Cart.Instance.getItems.Any())
                {
                    @foreach (var item in Cart.Instance.getItems)
                    { 
                        <div class="d-flex justify-content-between">
                            <h2 class="mb-20 mt-20">@item.Room.FaciName</h2>
                            <button type="button" class="border-0 bg-transparent h6" @onclick="() => RemoveItem(item.Room.FaciName)">
                                <i class="lni lni-trash-can text-danger"></i>
                            </button>
                        </div>
                        <div class="row">
                            <div class="col-7">
                                <div>
                                    @* <input type="date" @bind="StartDateString" @onchange="OnStartDateChanged" /> *@
                                    @* <input type="date" @bind="EndDateString" @onchange="OnEndDateChanged" /> *@
                                </div>
                            </div>
                            <div class="col-5">
                                <p style="font-size: 12px"; class="fw-bold">
                                </p>
                                @* <input type="text" name="price" id="price" style="font-size: 12px"; class="fw-bold" value=" @(item.Room.FaciMaxNumber.ToString())" readonly/> *@
                            </div>
                        </div>
                        <div class="row">
                            <label for="price" class="card-text text-sm form-label text-muted col">Price</label>
                            <div class="col-7">
                                <input type="text" name="price" id="price" class="form-control form-control-sm text-sm text-muted border-0 bg-transparent" value="@string.Format("IDR {0:N0}", @item.Room.FaciPrice)" readonly/>
                            </div>
                        </div>
                        <div class="row">
                            <label for="qty" class="card-text text-sm form-label text-muted col">Qty</label>
                            <div class="col-7">
                                <input type="number" name="qty" id="qty" class="form-control form-control-sm text-sm text-muted border-0" min="1" value="@item.Quantity" @oninput="@(e => UpdateItemQuantity(item, int.Parse(e.Value.ToString())))"/>
                            </div>
                        </div>
                        <div class="row">
                            <label for="subtotal" class="card-text text-sm form-label text-muted col">Sub total</label>
                            <div class="col-7">
                                <input type="text" name="subtotal" id="subtotal" class="form-control form-control-sm text-sm text-muted border-0 bg-transparent" value="@item.Subtotal.ToString("C0", new CultureInfo("id-ID"))" readonly/>
                            </div>
                        </div>
                        <hr/>
                    }

                    @* <div class="row"> *@
                    @*     <div class="col-5"> *@
                    @*         <p class="text-sm mb-10 fw-bold">Your Savings</p> *@
                    @*     </div> *@
                    @*     <div class="col-7"> *@
                    @*         <p class="text-sm mb-10 fw-bold">: Rp. </p> *@
                    @*     </div> *@
                    @* </div> *@
                    @* *@
                    @* <div class="row"> *@
                    @*     <label for="tax" class="card-text fw-bold form-label text-muted col">Tax (10%)</label> *@
                    @*     <div class="col-7"> *@
                    @*         <input type="text" name="tax" id="tax" class="form-control form-control-sm fw-bold text-muted border-0 bg-transparent" value="@Cart.Instance.TaxAmount.ToString("C0", new CultureInfo("id-ID"))" readonly/> *@
                    @*     </div> *@
                    @* </div> *@
                    <div class="row">
                        <label for="total" class="card-text fw-bold form-label text-muted col">Total</label>
                        <div class="col-7">
                            <input type="text" name="total" id="total" class="form-control form-control-sm fw-bold text-muted border-0 bg-transparent" value="@Cart.Instance.TotalPrice.ToString("C0", new CultureInfo("id-ID"))" readonly/>
                        </div>
                    </div>
                <a href="#0" class="main-btn primary-btn rounded-full btn-hover mt-20 ml-50">Continue To Book</a>
                }
            </div>
        </div>
    </div>
</div>
</div>
</div>
</div>
<!-- end container -->
</div>
</section>
<div class="warning-modal">
    <div class="modal fade" id="ModalThree" tabindex="-1" style="display: none;" aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content card-style">
          <div class="modal-header px-0 border-0">
            <h5 class="text-bold">New message</h5>
            <button class="border-0 bg-transparent h1" data-bs-dismiss="modal">
              <i class="lni lni-cross-circle"></i>
            </button>
          </div>
          <div class="modal-body px-0">
            <div class="content mb-30">
              <p class="text-sm">
                Lorem Ipsum is simply dummy text of the printing and
                typesetting industry. Lorem Ipsum has been the industry's
                standard dummy text ever since the 1500s, when an unknown
                printer took a galley of type and scrambled it to make a type
                specimen book. It has survived not only five centuries, but
                also the leap into electronic typesetting, remaining
                essentially unchanged. It was popularised in the 1960s with
                the release of Letraset sheets containing Lorem Ipsum
                passages, and more recently with desktop publishing software
                like Aldus PageMaker including versions of Lorem Ipsum.Lorem
                Ipsum is simply dummy text of the printing and typesetting
                industry. Lorem Ipsum has been the industry's standard dummy
                text ever since the .
              </p>
            </div>
            <div class="action d-flex flex-wrap justify-content-end">
              <button data-bs-dismiss="modal" class="main-btn danger-btn-outline btn-hover m-1">
                Cancel
              </button>
              <button data-bs-dismiss="modal" class="main-btn primary-btn btn-hover m-1">
                Send Message
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
@code
{
   
    private string _apiUrl = "https://localhost:7068/api/booking";
    
    public HotelsDto Hotels { get; set; } = new HotelsDto();

    public List<HotelsDto> HotelsListById { get; set; } = new List<HotelsDto>();
    
    [Inject] 
    public IHotelHttpRepository HotelHttpRepository { get; set; }
    
    public List<SpecialOffersDto> SpecialOffersList { get; set; } = new List<SpecialOffersDto>();
    
    [Inject] 
    public ISpecialOfferHttpRepository SpecialOfferHttpRepository { get; set; }

    protected async override Task OnInitializedAsync()
    {
        //LIST facilities dari backend
        HotelsListById = await HotelHttpRepository.GetHotelsById(Id);
        //MENGAMBIL row pertama untuk mendapatkan data hotel saja
        Hotels = HotelsListById.FirstOrDefault(h => h.HotelId == Id);
        SpecialOffersList = await SpecialOfferHttpRepository.GetSpecialOffers();
        
    }
    
    public partial class HotelFacilities
    {
        private bool IsAddedToCart(HotelsDto desc)
        {
            var item = Cart.Instance.items.FirstOrDefault(i => i.Room.FaciName == desc.FaciName);
            return item != null;
        }
    }
    
    private bool CanAddToCart(HotelsDto desc)
    {
        var item = Cart.Instance.items.FirstOrDefault(i => i.Room.FaciName == desc.FaciName);
        return item == null && Cart.Instance.items.Count == 0;
    }
    
    private void AddtoCart(HotelsDto hoteldata)
    {

        int desiredCapacity = 1; // ubah angka 2 dengan kapasitas yang diinginkan

    // cek apakah kamar tersebut sudah ada di cart dengan jumlah yang sama atau lebih besar dari kapasitas yang diinginkan
        var existingItem = Cart.Instance.items.FirstOrDefault(item => item.Room.FaciName == hoteldata.FaciName && item.Quantity >= desiredCapacity);

        if (existingItem != null)
        {
    // kamar tersebut sudah ada di cart dengan jumlah yang sama atau lebih besar dari kapasitas yang diinginkan
    // kunci tombol "Add Room" untuk kamar tersebut
            return;
        }

        bool isAlreadyAdded = Cart.Instance.IsAddedToCart(hoteldata);

        if (!isAlreadyAdded)
        {
            Cart.Instance.AddItem(hoteldata, desiredCapacity);
            OpenCart();
            StateHasChanged();
        }
    }

    private void UpdateItemQuantity(RoomItem item, int newQuantity)
    {
        if (newQuantity < 1)
        {
            newQuantity = 1;
        }

        if (item.Room != null) Cart.Instance.UpdateQuantity(item.Room.FaciName, newQuantity);

        StateHasChanged();
    }

    private static void RemoveItem(string roomName)
    {
        Cart.Instance.RemoveItem(roomName);
    }
    
    [Parameter]
    public bool CartIsOpen { get; set; } = false;

    private void OpenCart()
    {
        CartIsOpen = true;
    }

    private void CloseCart()
    {
        CartIsOpen = !CartIsOpen;
    }

    [Parameter]
    public int OrderDetail { get; set; } = 0;
    
    // [Parameter]
    // public EventCallback<DateTime> StartDateChanged { get; set; }
    //
    // [Parameter]
    // public EventCallback<DateTime> EndDateChanged { get; set; }
    //
    // private string startDateString;
    // private string endDateString;
    //
    // public string StartDateString
    // {
    //     get => startDateString;
    //     set
    //     {
    //         startDateString = value;
    //         DateTime.TryParseExact(startDateString, "yyyy-MM-dd", CultureInfo.InvariantCulture, DateTimeStyles.None, out DateTime startDate);
    //         StartDateChanged.InvokeAsync(startDate);
    //         EndDateString = startDate.AddDays(1).ToString("yyyy-MM-dd");
    //         EndDateChanged.InvokeAsync(startDate.AddDays(1));
    //     }
    // }
    //
    // public string EndDateString
    // {
    //     get => endDateString;
    //     set
    //     {
    //         endDateString = value;
    //         DateTime.TryParseExact(endDateString, "yyyy-MM-dd", CultureInfo.InvariantCulture, DateTimeStyles.None, out DateTime endDate);
    //         EndDateChanged.InvokeAsync(endDate);
    //     }
    // }
    //
    // private void OnStartDateChanged(ChangeEventArgs e)
    // {
    //     StartDateString = e.Value.ToString();
    // }
    //
    // private void OnEndDateChanged(ChangeEventArgs e)
    // {
    //     EndDateString = e.Value.ToString();
    // }
}




    

    
    
    


    
 


