@page "/BookingOrders/{Id:int}"

@using Realta.Contract.Models

@using Realta.Frontend.HttpRepository.Booking

@* @Bookings.BoorOrderNumber *@
@* @BookingDetailByBoorId *@
@* @BookingExtraByBoorId *@
@* @UserInfo *@
<section>
<div class="container-fluid">
<!-- ========== title-wrapper start ========== -->
  <div class="title-wrapper pt-30">
    <div class="row align-items-center">
      <div class="col-md-6">
        <div class="title d-flex align-items-center flex-wrap mb-30">
          <h2 class="mr-40">Invoice</h2>
        </div>
      </div>
    <!-- end col -->
    <div class="col-md-6">
      <div class="breadcrumb-wrapper mb-30">
        <nav aria-label="breadcrumb">
          <ol class="breadcrumb">
            <li class="breadcrumb-item">
              <a href="#0">Dashboard</a>
            </li>
            <li class="breadcrumb-item active" aria-current="page">
              Invoice
            </li>
          </ol>
        </nav>
      </div>
    </div>
    <!-- end col -->
  </div>
  <!-- end row -->
</div>
<!-- ========== title-wrapper end ========== -->

<!-- Invoice Wrapper Start -->
<div class="invoice-wrapper">
  <div class="row">
    <div class="col-12">
      <div class="invoice-card card-style mb-30">
      <div class="invoice-header mt-4">
        <div class="invoice-for px-0">
          <h5 class="mt-40 ml-5">Order Number</h5>
          <p class="text-sm ml-5">
            @Bookings.BoorOrderNumber
          </p>
        </div>
        <div class="invoice-date">
          <h5 class="text-bold mt-40">Order Date</h5>
          <p class="text-sm mr-20">
            @Bookings.BoorOrderDate
          </p>
        </div>
        <div class="invoice-date">
          <h5 class="text-bold mt-40">Invoice number</h5>
          <p class="text-sm">
            @Bookings.TrxNumber
          </p>
        </div>
        <div class="invoice-date">
          <h5 class="text-bold mt-40">Invoice Date</h5>
          <p class="text-sm">
            @Bookings.BoorOrderDate
          </p>
        </div>
        <div class="invoice-date">
          <h5 class="text-bold mt-40">Status</h5>
          <p class="text-sm">
            @Bookings.BoorStatus
          </p>
        </div>
        <div class="invoice-date">
          <h5 class="text-bold mt-40">Payment Type</h5>
          <p class="text-sm">
            @Bookings.BoorPayType
          </p>
        </div>
      </div>
      <div class="invoice mt-4">
        <div class="row">
          <div class="col">
            <h2 class="ml-10">Customer</h2>
          </div>
        </div>
        <div class="invoice-address mb-30">
          <div class="invoice-for px-0">
            <div class="mr-20">
              <h5 class="ml-10 mr-10 mb-10 mt-0">Full Name</h5>
              <p class="text-sm  ml-10 mr-10">
                NamaUser
              </p>
            </div>
          </div>
          <div class="invoice-for px-0">
            <div class="mr-20">
              <h5 class="ml-10 mr-10 mb-10 mt-0">Contact Number</h5>
              <p class="text-sm  ml-10 mr-10">
                08771231244
              </p>
            </div>
          </div>
          <div class="invoice-for px-0">
            <div class="mr-20">
              <h5 class="ml-10 mr-10 mb-10 mt-0">Member</h5>
              <p class="text-sm  ml-10 mr-10">
                VIP
              </p>
            </div>
          </div>
          <div class="invoice-for px-0">
            <div class="mr-20">
              <h5 class="ml-10 mr-10 mb-10 mt-0">Member Date</h5>
              <p class="text-sm  ml-10 mr-10">
                23 May 2023
              </p>
            </div>
          </div>
          <div class="invoice-for px-0">
            <div class="mr-20">
              <h5 class="ml-10 mr-10 mb-10 mt-0">Remaining Points</h5>
              <p class="text-sm  ml-10 mr-10">
                +150 Points
              </p>
            </div>
          </div>
        </div>
      </div>
      <div class="table-responsive">
        <h2 class="ml-10">Billing</h2>
        <hr>
        <table class="invoice-table table">
          <thead>
          <tr>
            <th class="desc">
              <h6 class="text-sm text-medium">Facilities</h6>
            </th>
            <th class="qty">
              <h6 class="text-sm text-medium">Qty</h6>
            </th>
            <th class="service">
              <h6 class="text-sm text-medium">Vacant</h6>
            </th>
            <th class="amount">
              <h6 class="text-sm text-medium">Price</h6>
            </th>
            <th class="amount">
              <h6 class="text-sm text-medium">Discount</h6>
            </th>
            <th class="amount">
              <h6 class="text-sm text-medium">Point Member</h6>
            </th>
            <th class="amount">
              <h6 class="text-sm text-medium">Sub Total</h6>
            </th>
          </tr>
          </thead>
          <tbody>
         @{
             var bookingDetails = BookingDetailByBoorId
                 .GroupBy(x => new { x.FaciName, x.BordeAdults, x.BordeKids })
                 .Select(g => new {
                     g.Key.FaciName,
                     g.Key.BordeAdults,
                     g.Key.BordeKids,
                     Qty = g.Count(),
                     BordePrice = g.First().BordePrice,
                     BordeDiscount = g.First().BordeDiscount,
                     MemberDiscount = 0.1M // diskon member sebesar 10%
                 });
         }
         
         @foreach (var roomName in bookingDetails)
         {
             <tr>
                 <td>
                     <p class="text-sm">
                         @roomName.FaciName
                     </p>
                 </td>
                 <td>
                     <p class="text-sm">@roomName.Qty</p>
                 </td>
                 <td>
                     <p class="text-sm">@roomName.BordeAdults Adult, @roomName.BordeKids Child</p>
                 </td>
                 <td>
                     <p class="text-sm">@string.Format("IDR {0:N0}", @roomName.BordePrice)</p>
                 </td>
                 <td>
                     <p class="text-sm text-center mr-20">@string.Format("{0:#%}", roomName.BordeDiscount)</p>
                 </td>
                 @{
                     var memberDiscount = 0.1; // diskon member sebesar 10%
                     var totalDiscount = roomName.BordeDiscount + (decimal?)memberDiscount; // nilai total diskon
                     var discountedPrice = roomName.BordePrice * (1 - (totalDiscount != null ? totalDiscount.Value : 0)); // harga kamar setelah didiskon
                 }
                 <td>
                     <p class="text-sm"> Disc @string.Format("{0:#%}", memberDiscount) <br/> (-100 Pts)</p>
                 </td>
                 <td>
                     <p class="text-sm">IDR @string.Format("{0:N0}", discountedPrice)</p>
                 </td>
             </tr>
         }
          @{
              // dictionary untuk menyimpan jumlah item
              Dictionary<string, int> itemQuantities = new Dictionary<string, int>();
          }
          
          @foreach (var extra in BookingExtraByBoorId)
          {
             
          
              // tampilkan item dan quantity-nya
              <tr>
                  <td>
                      <p class="text-sm">
                          @extra.PritName
                      </p>
                  </td>
                  <td>
                      <p class="text-sm">@extra.BoexQty</p>
                  </td>
                  <td>
                      <p class="text-sm"></p>
                  </td>
                  <td>
                      <p class="text-sm">@string.Format("IDR {0:N0}", @extra.BoexPrice)</p>
                  </td>
                  <td>
                      <p class="text-sm text-center mr-20"></p>
                  </td>
                  <td>
                      <p class="text-sm"></p>
                  </td>
                  <td>
                      <p class="text-sm">@string.Format("IDR {0:N0}", extra.BoexPrice * @extra.BoexQty)</p>
                  </td>
              </tr>
          }

          <tr>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            
            @{
              // itemQuantities = new Dictionary<string, int>();
              // foreach (var extra in BookingExtraByBoorId)
              //   {
              //       if (itemQuantities.ContainsKey(extra.PritName))
              //       {
              //           itemQuantities[extra.PritName]++;
              //       }
              //       else
              //       {
              //           itemQuantities.Add(extra.PritName, 1);
              //       }
              //   }
            
              decimal totalExtrasPrice = BookingOrderDetailExtra.BoexSubtotal.GetValueOrDefault();
              // foreach (var extra in BookingExtraByBoorId)
              // {
              //   totalExtrasPrice += extra.BoexPrice.GetValueOrDefault() * ex;
              // }

              decimal totalRoomPrice = 0;
              foreach (var roomName in BookingDetailByBoorId)
              {
                var memberDiscount = 0.1;
                var totalDiscount = roomName.BordeDiscount.GetValueOrDefault() + (decimal)memberDiscount;
                var discountedPrice = roomName.BordePrice.GetValueOrDefault() * (1 - totalDiscount);
                totalRoomPrice += discountedPrice;
              }
            
                decimal tax = totalRoomPrice * 0.1M;
                decimal totalPrice = totalRoomPrice + totalExtrasPrice + tax;
            }
            
            <td>
                <h6 class="text-sm text-medium">Tax</h6>
            </td>
            <td>
                <h6 class="text-sm text-bold">IDR @string.Format("{0:N0} ({1}%)", tax, 10)</h6>
            </td>

          </tr>
          <tr>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            
            @{
                var totalDiscountAmount = bookingDetails.Sum(x => (x.BordePrice * (decimal)x.Qty) * (x.BordeDiscount + x.MemberDiscount));
            }
            <td>
              <h6 class="text-sm text-medium">Total Discount</h6>
            </td>
            <td>
              <h6 class="text-sm text-bold">IDR @string.Format("{0:N0}", totalDiscountAmount)</h6>
            </td>
          </tr>
          <tr>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td>
              <h6 class="text-sm text-medium">Payment Ammount</h6>
            </td>
            <td>
              <h6 class="text-sm text-bold">IDR 189,130</h6>
            </td>
          </tr>

          </tbody>
        </table>
      </div>
      </div>
      <div class="invoice-action">
                <ul class="d-flex flex-wrap align-items-center justify-content-center">
                  <li class="m-2">
                    <a href="#0" class="main-btn primary-btn-outline btn-hover">
                      Download Invoice
                    </a>
                  </li>
                  <li class="m-2">
                    <a href="#0" class="main-btn primary-btn btn-hover">
                      Send Invoice
                    </a>
                  </li>
                </ul>
              </div>
      <!-- End Card -->
    </div>
    <!-- ENd Col -->
  </div>
  <!-- End Row -->
</div>
<!-- Invoice Wrapper End -->
</div>
<!-- end container -->
</section>

@code{
  
  public BookingOrdersDto? Bookings { get; set; } = new BookingOrdersDto();
  public BookingOrderDetailDto? BookingOrderDetail { get; set; } = new BookingOrderDetailDto();
  public BookingOrderDetailExtraDto? BookingOrderDetailExtra { get; set; } = new BookingOrderDetailExtraDto();
  
  //variable untuk menampung data dari endpoint
  public List<BookingOrderDetailDto> BookingDetailByBoorId { get; set; } = new List<BookingOrderDetailDto>();
  public List<BookingOrderDetailExtraDto> BookingExtraByBoorId { get; set; } = new List<BookingOrderDetailExtraDto>();
  public UserMemberDto UserInfo { get; set; } = new UserMemberDto();
  
  [Inject]
  public IBookingHttpRepository BookingHttpRepository {get; set; }
  
  protected async override Task OnInitializedAsync()
  {
    Bookings = await BookingHttpRepository.GetBookingOrdersById(Id);
    BookingDetailByBoorId = await BookingHttpRepository.GetBookingOrderDetailByBoorId(Id);
    BookingExtraByBoorId = await BookingHttpRepository.GetBookingOrderDetailExtraByBoorId(Id);
    UserInfo = await BookingHttpRepository.GetUserMemberByBoorId(Id);    
  }
  
  
}